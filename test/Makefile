binary:
	@echo "====test leve binary===="
	@echo "> 支持所有运算符 <"
	@go run main.go test/test_binary
demo:
	@echo "====test leve 1.0===="
	@echo "> 支持基本+-*/ <"
	@go run main.go test/test1
dev2:
	@echo "====test leve 2.0===="
	@echo "> 支持自定义func < "
	@go run main.go test/test2
dev2.1:
	@echo "====test leve 2.1===="
	@echo "> 支持自定义func < "
	@go run main.go test/test2.1
dev2.2:
	@echo "====test leve 2.2===="
	@echo "> 支持自定义func < "
	@go run main.go test/test2.2
dev2.3:
	@echo "====test leve 2.3===="
	@echo "> 支持自定义func < "
	@go run main.go test/test2.3
dev3:
	@echo "====test leve 3.0===="
	@echo "> 支持复杂数据类型 <"
	@go run main.go test/test3
dev4:
	@echo "====test leve 4.0===="
	@echo "> 支持for循环 <"
	@go run main.go test/test4
dev4.1:
	@echo "====test leve 4.1===="
	@echo "> 支持for循环 <"
	@go run main.go test/test4.1
dev5:
	@echo "====test leve 5.0===="
	@echo "> 支持append <"
	@go run main.go test/test5
dev6:
	@echo "====test leve 6.0===="
	@echo "> 支持自定义结构体 <"
	@echo "> but 会变成mp     <"
	@echo "> so TODO          <"
	@go run main.go test/test6
	@echo "====test leve 6.1===="
	@echo "> 支持结构体func   <"
	@go run main.go test/test6.1
	@echo "====test leve 6.2===="
	@echo ">支持结构体指针func<"
	@go run main.go test/test6.2

dev7:
	@echo "====test leve 7===="
	@echo "> 支持多层结构体   <"
	@go run main.go test/test7
dev8:
	@echo "====test leve 8===="
	@echo "> 支持指针         <"
	@go run main.go test/test8
dev9:
	@echo "====test leve 9===="
	@echo "> 支持  return     <"
	@go run main.go test/test9
dev9.1:
	@echo "====test leve 9.1===="
	@echo "> 支持  return多个 <"
	@go run main.go test/test9.1
dev9.2:
	@echo "====test leve 9.2===="
	@echo ">支持return多个指针<"
	@go run main.go test/test9.2
dev10:
	@echo "====test leve 10.0===="
	@echo "> 支持import       <"
	@go run main.go test/test10
dev10.1:
	@echo "====test leve 10.1===="
	@echo "> 支持import缓存   <"
	@go run main.go test/test10.1
dev11:
	@echo "====test leve 11.0===="
	@echo "> 支持 candy_shell <"
	@go run main.go test/test11.0
dev11.1:
	@echo "====test leve 11.1===="
	@echo "> 支持candy_shell_1<"
	@go run main.go test/shell
dev12:
	@echo "====test leve 12===="
	@echo "> 支持全部二进制   <"
	@go run main.go test/test12
dev13: 
	@echo "====test leve 13===="
	@echo "> 支持全部数据类型 <"
	@go run main.go test/test13
for:
	@echo "====test for    ===="
	@echo "> 支持for          <"
	@go run main.go test/test_stmt_for
switch:
	@echo "====test for    ===="
	@echo "> 支持switch       <"
	@go run main.go test/test_stmt_switch
if:
	@echo "====test if     ===="
	@echo "> 支持 if          <"
	@go run main.go test/test_stmt_if
const:
	@echo "====test const  ===="
	@echo "> 支持 const       <"
	@go run main.go test/const
inc:
	@echo "====test --  ======="
	@echo "> 支持 --          <"
	@go run main.go test/test_--
binary_assi:
	@echo "====test += ======="
	@echo "> 支持 +=          <"
	@go run main.go test/binary_assi
basiclit:
	@echo "====test basiclit=="
	@echo "> 支持所有数据类型<"
	@go run main.go test/basiclit
check_1:
	@echo "====test basiclit=="
	@echo "> 支持所有数据类型<"
	@go run main.go test/check_1
